#!/usr/bin/env bash


# Purge the module environment to avoid conflicts
module unload java/8u111 matlab/R2017b python/2.7.12 intel/2017.0

# Load the required environment

# Load the R module
module load <%= context.r_module %>

# Load other modules
<%- unless context.modules.blank? -%>
# Load the require modules
module load <%= context.modules %>
<%- end -%>
  # Additional environment which could be moved into a module
  # Change these to suit
  # export PATH="$PATH:/gpfs/runtime/opt/ood_system/rstudio_server2022/usr/lib/rstudio-server/bin/"

echo "Printing PATH"
echo $PATH
#
# Start RStudio Server
#

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="${PWD}/bin/auth"
export tmp_path=$PWD
# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash
  echo " this is PWD"
  echo $PWD
  #module load <%= context.r_module %>
  #export PATH="$PATH:/usr/lib/rstudio-server/bin"
  #export PATH="$PATH:/gpfs/runtime/opt/ood_system/rstudio_server2022/usr/lib/rstudio-server/bin/"
  #export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/lib64:/gpfs/runtime/opt/ood_system/postgres_libs/usr/lib64"
  # Log all output from this script
  export RSESSION_LOG_FILE="${PWD}/rsession.log"

  exec &>>"\${RSESSION_LOG_FILE}"

  # Launch the original command
  echo "Launching rsession..."
  set -x
  echo `which rsession`
  exec /usr/lib/rstudio-server/bin/rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Set working directory to home directory
cd "${HOME}"

export TMPDIR="$(mktemp -d)"

mkdir -p "$TMPDIR/rstudio-server"
python -c 'from uuid import uuid4; print(uuid4())' > "$TMPDIR/rstudio-server/secure-cookie-key"
chmod 0600 "$TMPDIR/rstudio-server/secure-cookie-key"

set -x
# Launch the RStudio Server
echo "Starting up rserver..."
echo `which rserver`

mkdir "$tmp_path/run" 
mkdir "$tmp_path/var-lib-rstudio-server"
printf 'provider=sqlite\ndirectory=/var/lib/rstudio-server\n' > $tmp_path/database.conf

SINGULARITYENV_PREPEND_PATH=$PATH singularity exec \
 --bind /gpfs/runtime,/gpfs/data,/gpfs/scratch,$tmp_path/run:/run,$tmp_path/var-lib-rstudio-server:/var/lib/rstudio-server,$tmp_path/database.conf:/etc/rstudio/database.conf \
 /gpfs/runtime/opt/ood_system/rstudio_server2022/rstudio_4.2.sif /usr/lib/rstudio-server/bin/rserver  --www-port "${port}" \
 --auth-none 1 \
 --auth-encrypt-password 0 \
 --rsession-path "${RSESSION_WRAPPER_FILE}" \
 --server-data-dir /tmp --server-working-dir /tmp \
 --server-user $USER
 #--auth-pam-helper-path "${RSTUDIO_AUTH}" \

#singularity run -B "$TMPDIR:/tmp" "$RSTUDIO_SERVER_IMAGE" \
# --www-port "${port}" --auth-none 1  --auth-pam-helper-path "${RSTUDIO_AUTH}" \
# --auth-encrypt-password 0  --rsession-path "${RSESSION_WRAPPER_FILE}" \
# --server-data-dir /tmp

# echo 'Singularity has exited...'
