#!/usr/bin/env bash

echo " Print ENV "
printenv | grep SLURM

# Benchmark info
echo "TIMING - Starting main script at: $(date)"

# Set working directory to home directory
cd "${HOME}"

# Workaround for directory permission error
# #unset XDG_RUNTIME_DIR
export XDG_RUNTIME_DIR=""

#
# Start Jupyter Notebook Server
#
# load the required conda module
module load <%= context.anaconda_module %>

if [[ <%= context.anaconda_module%> =~ miniconda3 ]]
    then
    source /oscar/runtime/software/external/miniconda3/23.11.0/etc/profile.d/conda.sh
fi

if [[ <%= context.anaconda_module%> =~ anaconda ]]
    then
    source /oscar/rt/9.2/software/0.20-generic/0.20.1/opt/spack/linux-rhel9-x86_64_v3/gcc-11.3.1/anaconda-2023.09-0-7nso27ys7navjquejqdxqylhg7kuyvxo/etc/profile.d/conda.sh
fi

##source /oscar/runtime/software/<%=context.anaconda_module%>/etc/profile.d/conda.sh

<%- unless context.conda_env.blank? -%>
#source /gpfs/runtime/opt/<#%=context.anaconda_module%>/etc/profile.d/conda.sh
conda activate <%=context.conda_env%>
<%- end -%>

<%- unless context.modules.blank? -%>
# Purge the module environment to avoid conflicts
module purge

# Update: psaluja (Sat-March9,2024)
# Bug reported by Liqi Shu and Paul Stey - When specifying a module to load (e.g., ffmpeg), 
# the Anaconda module fails to load, resulting in a 'Jupyter not found' error in the log.
# To maintain cleanliness, we purge the environment and reload Anaconda along with the essential requested modules.
module load anaconda

# Load the require modules
module load <%=context.modules%>

<%- end -%>

# Benchmark info
# List loaded modules
module list
echo "TIMING - Starting jupyter at: $(date)"

# Launch the Jupyter Notebook Server
set -x
jupyter <%= context.mode == "1" ? "lab" : "notebook" %> --config="${CONFIG_FILE}" <%= context.extra_jupyter_args %>